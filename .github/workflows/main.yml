name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest pytest-cov

            - name: Run tests
              run: |
                  pytest --cov=helix --cov-report=xml --cov-report=term

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella

    lint:
        name: Code Quality
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Install linters
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8 mypy bandit

            - name: Run flake8
              run: flake8 helix --count --select=E9,F63,F7,F82 --show-source --statistics

            - name: Run mypy
              run: mypy helix --ignore-missing-imports
              continue-on-error: true

            - name: Run bandit security check
              run: bandit -r helix -ll
              continue-on-error: true

    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        needs: [test, lint]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  tags: ${{ github.repository }}:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: |
                      ${{ github.repository }}:latest
                      ${{ github.repository }}:${{ github.sha }}
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    deploy:
        name: Deploy to Production
        runs-on: ubuntu-latest
        needs: build
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Deploy notification
              run: |
                  echo "ðŸš€ Deployment step - configure your deployment here"
                  echo "Image: ${{ github.repository }}:${{ github.sha }}"
